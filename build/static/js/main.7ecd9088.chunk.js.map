{"version":3,"sources":["Tabs/ShopItems.tsx","Tabs/Overlay.tsx","Tabs/AddProductInput.tsx","Tabs/AddProduct.tsx","data/PredefinedShopItems.ts","Tabs/Tabs.tsx","consts/urls.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["circleStyle","color","grey","ShopItems","props","shopItems","map","shopItem","index","key","className","FormControlLabel","control","Checkbox","icon","RadioButtonUnchecked","style","checkedIcon","CheckCircleOutline","checked","value","onChange","onShopItemClick","label","Overlay","height","width","left","top","position","onClick","onOverlayClick","opacity","background","AddProductInput","theme","useTheme","textInput","useRef","useState","product","updateProduct","borderTopLeftRadius","borderTopRightRadius","boxShadow","bottom","onSubmit","event","preventDefault","current","focus","TextField","inputRef","autoFocus","target","type","transform","palette","primary","main","AddProduct","showAddProduct","setShowAddProduct","handleClose","onBlur","fontSize","right","PREDEFINED_SHOP_ITEMS","getShopItemsWithToggledIndex","idx","AppTabs","tabIndex","setTabIndex","setShopItems","predefinedShopItems","setPredefinedShopItems","addShopItem","newShopItem","removeShopItem","filter","_","onPredefinedItemAlreadySelected","indexOfShopItems","findIndex","Fragment","Paper","square","Tabs","variant","indicatorColor","textColor","aria-label","Tab","hidden","setTimeout","urls","createMuiTheme","typography","button","textTransform","secondary","App","ThemeProvider","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7ecd9088.chunk.js","sourcesContent":["import React, { CSSProperties } from 'react'\nimport { RouteComponentProps } from '@reach/router'\nimport { grey } from '@material-ui/core/colors'\nimport { FormControlLabel } from '@material-ui/core'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { CheckCircleOutline, RadioButtonUnchecked } from '@material-ui/icons'\n\nexport interface ShopItem {\n  value: boolean\n  label: string\n}\n\nexport interface ShopItemsProps {\n  shopItems: ShopItem[]\n  onShopItemClick: (index: number) => void\n}\n\nconst circleStyle: CSSProperties = { color: grey[500] }\n\nfunction ShopItems(props: RouteComponentProps & ShopItemsProps) {\n  return (\n    <>\n      {props.shopItems.map((shopItem: ShopItem, index) => {\n        return (\n          <div key={index} className={'border-solid border-gray-300 border-b'}>\n            <FormControlLabel\n              className=\"px-6\"\n              control={\n                <Checkbox\n                  icon={<RadioButtonUnchecked style={circleStyle} />}\n                  checkedIcon={<CheckCircleOutline />}\n                  checked={shopItem.value}\n                  onChange={() => props.onShopItemClick(index)}\n                />\n              }\n              label={shopItem.label}\n            />\n          </div>\n        )\n      })}\n    </>\n  )\n}\n\nexport default ShopItems\n","import { RouteComponentProps } from '@reach/router'\nimport React from 'react'\n\nfunction Overlay(props: RouteComponentProps & { onOverlayClick: () => void }) {\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '100%',\n        left: 0,\n        top: 0,\n        position: 'absolute',\n      }}\n    >\n      <div\n        onClick={props.onOverlayClick}\n        style={{\n          position: 'relative',\n          height: '100%',\n          width: '100%',\n          opacity: '0.6',\n          background: 'gray',\n        }}\n      ></div>\n    </div>\n  )\n}\n\nexport default Overlay\n","import { RouteComponentProps } from '@reach/router'\nimport React, { useRef, useState } from 'react'\nimport { TextField, useTheme } from '@material-ui/core'\nimport NavigationIcon from '@material-ui/icons/Navigation'\n\nexport interface AddProductInputProps {\n  onSubmit: (newItemLabel: string) => void\n  onBlur?: () => void\n}\n\n// TODO [P. Labus] after enter, focus again on input\n// switching tabs by swiping left and right\n// drag and drop\n// localstorage\n// exit when keyboard closes on input\nfunction AddProductInput(props: RouteComponentProps & AddProductInputProps) {\n  const theme = useTheme()\n  const textInput = useRef(null)\n\n  const [product, updateProduct] = useState('')\n  const onSubmit = (event: React.ChangeEvent<{}>) => {\n    event.preventDefault()\n    props.onSubmit(product)\n    updateProduct('')\n\n    // @ts-ignore\n    textInput.current.focus()\n  }\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        borderTopLeftRadius: '20px',\n        borderTopRightRadius: '20px',\n        boxShadow: '0 0 0 1px rgba(0, 0, 0, 0.05)',\n        bottom: '0',\n        background: 'white',\n        width: '100%',\n      }}\n    >\n      <div className=\"p-8 flex justify-center items-center\">\n        <form onSubmit={onSubmit}>\n          <TextField\n            inputRef={textInput}\n            autoFocus\n            label=\"Add product\"\n            value={product}\n            onChange={(value) => updateProduct(value.target.value)}\n          />\n          <button type=\"submit\">\n            <NavigationIcon\n              className=\"ml-5\"\n              style={{\n                transform: 'rotate(90deg)',\n                color: theme.palette.primary.main,\n              }}\n            />\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default AddProductInput\n","import { RouteComponentProps } from '@reach/router'\nimport React, { useState } from 'react'\nimport { useTheme } from '@material-ui/core'\nimport AddCircleOutlinedIcon from '@material-ui/icons/AddCircleOutlined'\nimport Overlay from './Overlay'\nimport AddProductInput, { AddProductInputProps } from './AddProductInput'\n\nfunction AddProduct(props: RouteComponentProps & AddProductInputProps) {\n  const [showAddProduct, setShowAddProduct] = useState(false)\n  const theme = useTheme()\n  const handleClose = () => setShowAddProduct(false)\n\n  return (\n    <>\n      {showAddProduct && <Overlay onOverlayClick={handleClose} />}\n\n      {showAddProduct && (\n        <AddProductInput onSubmit={props.onSubmit} onBlur={handleClose} />\n      )}\n\n      {!showAddProduct && (\n        <button onClick={() => setShowAddProduct(true)}>\n          <AddCircleOutlinedIcon\n            style={{\n              fontSize: '60px',\n              color: theme.palette.primary.main,\n              position: 'fixed',\n              right: '5%',\n              bottom: '5%',\n            }}\n          />\n        </button>\n      )}\n    </>\n  )\n}\n\nexport default AddProduct\n","import { ShopItem } from '../Tabs/ShopItems'\n\nexport const PREDEFINED_SHOP_ITEMS: ShopItem[] = [\n  'Mrożone owoce',\n].map((label) => ({ label, value: false }))\n","import React, { useState } from 'react'\nimport { RouteComponentProps } from '@reach/router'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\nimport FastfoodIcon from '@material-ui/icons/Fastfood'\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter'\nimport ShopItems, { ShopItem } from './ShopItems'\nimport { Paper, Tab, Tabs } from '@material-ui/core'\nimport AddProduct from './AddProduct'\nimport { PREDEFINED_SHOP_ITEMS } from '../data/PredefinedShopItems'\n\nfunction getShopItemsWithToggledIndex(\n  shopItems: readonly ShopItem[],\n  index: number\n) {\n  return shopItems.map((control, idx) =>\n    index !== idx\n      ? { ...control }\n      : { label: control.label, value: !control.value }\n  )\n}\n\n// TODO [P. Labus] rename to main\nfunction AppTabs(props: RouteComponentProps) {\n  const [tabIndex, setTabIndex] = useState(0)\n\n  const [shopItems, setShopItems] = useState<ShopItem[]>([])\n  const [predefinedShopItems, setPredefinedShopItems] = useState<ShopItem[]>(\n    PREDEFINED_SHOP_ITEMS\n  )\n\n  const handleTabChange = (_: React.ChangeEvent<{}>, value: number) => {\n    setTabIndex(value)\n  }\n\n  const addShopItem = (newShopItem: string) => {\n    setShopItems([\n      ...shopItems,\n      {\n        value: false,\n        label: newShopItem,\n      },\n    ])\n  }\n\n  const updateShopItemState = (index: number) => {\n    setShopItems(getShopItemsWithToggledIndex(shopItems, index))\n    setTimeout(() => removeShopItem(index), 100)\n  }\n\n  const removeShopItem = (index: number) => {\n    setShopItems(shopItems.filter((_, idx) => index !== idx))\n  }\n\n  const onPredefinedShopItemAdded = (index: number) => {\n    const { value, label } = predefinedShopItems[index]\n    value\n      ? onPredefinedItemAlreadySelected(label)\n      : addShopItem(predefinedShopItems[index].label)\n    setPredefinedShopItems(\n      getShopItemsWithToggledIndex(predefinedShopItems, index)\n    )\n  }\n\n  const onPredefinedItemAlreadySelected = (label: string) => {\n    const indexOfShopItems = shopItems.findIndex(\n      (shopItem) => shopItem.label === label\n    )\n    removeShopItem(indexOfShopItems)\n  }\n\n  return (\n    <React.Fragment>\n      <Paper square>\n        <Tabs\n          value={tabIndex}\n          onChange={handleTabChange}\n          variant=\"fullWidth\"\n          indicatorColor=\"secondary\"\n          textColor=\"secondary\"\n          aria-label=\"icon label tabs\"\n        >\n          <Tab icon={<ShoppingCartIcon />} label=\"Zakupy\" />\n          <Tab icon={<FastfoodIcon />} label=\"Produkty\" />\n          <Tab icon={<BusinessCenterIcon />} label=\"Przepisy\" />\n        </Tabs>\n      </Paper>\n\n      <div hidden={tabIndex !== 0}>\n        <ShopItems\n          shopItems={shopItems}\n          onShopItemClick={updateShopItemState}\n        ></ShopItems>\n      </div>\n\n      <div hidden={tabIndex !== 1}>\n        <ShopItems\n          shopItems={predefinedShopItems}\n          onShopItemClick={onPredefinedShopItemAdded}\n        ></ShopItems>\n      </div>\n\n      <AddProduct onSubmit={addShopItem} />\n    </React.Fragment>\n  )\n}\n\nexport default AppTabs\n","type AppRoute = () => string\n\nexport interface AppRoutes {\n  root: AppRoute\n  list: AppRoute\n}\n\nexport const urls: AppRoutes = {\n  root: () => `/`,\n  list: () => `/list`,\n}\n","import React from 'react'\nimport './App.scss'\nimport { Router } from '@reach/router'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core'\nimport Tabs from './Tabs/Tabs'\nimport { urls } from './consts/urls'\n\nexport const theme = createMuiTheme({\n  typography: {\n    button: {\n      textTransform: 'none',\n    },\n  },\n  palette: {\n    primary: {\n      main: '#c62828',\n    },\n    secondary: {\n      main: '#ff5252',\n    },\n  },\n})\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Tabs path={urls.root()}></Tabs>\n      </Router>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/app.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}